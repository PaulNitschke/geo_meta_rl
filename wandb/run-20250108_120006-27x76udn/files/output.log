2025-01-08 12:00:07 | [CL_point_env] Logging to /Users/paulnitschke/Desktop/projects/geo_meta_rl-9916970f86b9202e9d7063b26b7a6a23cc989802/data/local/experiment/CL_point_env_1


Failed to import TF-Keras. Please note that TF-Keras is not installed by default when you install TensorFlow Probability. This is so that JAX-only users do not have to install TensorFlow or TF-Keras. To use TensorFlow Probability with TensorFlow, please install the tf-keras or tf-keras-nightly package.
This can be be done through installing the tensorflow-probability[tf] extra.
/Users/paulnitschke/Desktop/projects/geo_meta_rl-9916970f86b9202e9d7063b26b7a6a23cc989802/garage/experiment/deterministic.py:36: UserWarning: Enabeling deterministic mode in PyTorch can have a performance impact when using GPU.
  warnings.warn(


2025-01-08 12:00:07 | [CL_point_env] Obtaining samples...
/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/distributions/distribution.py:53: UserWarning: <class 'garage.torch.distributions.tanh_normal.TanhNormal'> does not define `arg_constraints`. Please set `arg_constraints = {}` or initialize the distribution with `validate_args=False` to turn off validation.
  warnings.warn(
/Users/paulnitschke/Desktop/projects/geo_meta_rl-9916970f86b9202e9d7063b26b7a6a23cc989802/garage/_dtypes.py:1051: UserWarning: Observation array([0., 0., 2.]) is outside observation_space Box(-inf, inf, (3,), float32)
  warnings.warn(
2025-01-08 12:00:10 | [CL_point_env] epoch #0 | Pre-Training Encoder...
2025-01-08 12:01:02 | [CL_point_env] epoch #0 | Pre-Training Encoder Done...
2025-01-08 12:01:03 | [CL_point_env] epoch #0 | Training...
2025-01-08 12:01:03 | [CL_point_env] epoch #0 | Training Encoder

2025-01-08 12:01:22 | [CL_point_env] epoch #0 | Evaluating...
2025-01-08 12:01:22 | [CL_point_env] epoch #0 | Sampling for adapation and meta-testing...


Failed to import TF-Keras. Please note that TF-Keras is not installed by default when you install TensorFlow Probability. This is so that JAX-only users do not have to install TensorFlow or TF-Keras. To use TensorFlow Probability with TensorFlow, please install the tf-keras or tf-keras-nightly package.
This can be be done through installing the tensorflow-probability[tf] extra.
/Users/paulnitschke/Desktop/projects/geo_meta_rl-9916970f86b9202e9d7063b26b7a6a23cc989802/garage/experiment/deterministic.py:36: UserWarning: Enabeling deterministic mode in PyTorch can have a performance impact when using GPU.
  warnings.warn(


2025-01-08 12:01:23 | [CL_point_env] epoch #0 | Finished meta-testing...
2025-01-08 12:01:23 | [CL_point_env] epoch #0 | Sampling for adapation and meta-testing...


Failed to import TF-Keras. Please note that TF-Keras is not installed by default when you install TensorFlow Probability. This is so that JAX-only users do not have to install TensorFlow or TF-Keras. To use TensorFlow Probability with TensorFlow, please install the tf-keras or tf-keras-nightly package.
This can be be done through installing the tensorflow-probability[tf] extra.


2025-01-08 12:01:32 | [CL_point_env] epoch #0 | Finished meta-testing...
2025-01-08 12:01:32 | [CL_point_env] epoch #0 | Saving snapshot...
2025-01-08 12:01:32 | [CL_point_env] epoch #0 | Saved
2025-01-08 12:01:32 | [CL_point_env] epoch #0 | Time 84.36 s
2025-01-08 12:01:32 | [CL_point_env] epoch #0 | EpochTime 84.36 s
--------------------------------------------------  ---------
MetaTest/Average/AverageDiscountedReturn            -256.41
MetaTest/Average/AverageReturn                      -256.41
MetaTest/Average/Iteration                             0
MetaTest/Average/MaxReturn                          -127.453
MetaTest/Average/MinReturn                          -397.775
MetaTest/Average/NumEpisodes                          20
MetaTest/Average/StdReturn                            84.6816
MetaTest/Average/SuccessRate                           0
MetaTest/Average/TerminationRate                       0
MetaTest/__unnamed_task__/AverageDiscountedReturn   -256.41
MetaTest/__unnamed_task__/AverageReturn             -256.41
MetaTest/__unnamed_task__/Iteration                    0
MetaTest/__unnamed_task__/MaxReturn                 -127.453
MetaTest/__unnamed_task__/MinReturn                 -397.775
MetaTest/__unnamed_task__/NumEpisodes                 20
MetaTest/__unnamed_task__/StdReturn                   84.6816
MetaTest/__unnamed_task__/SuccessRate                  0
MetaTest/__unnamed_task__/TerminationRate              0
MetaTrain/Average/AverageDiscountedReturn           -277.598
MetaTrain/Average/AverageReturn                     -277.598
MetaTrain/Average/Iteration                            0
MetaTrain/Average/MaxReturn                         -199.994
MetaTrain/Average/MinReturn                         -355.202
MetaTrain/Average/NumEpisodes                          2
MetaTrain/Average/StdReturn                           77.6039
MetaTrain/Average/SuccessRate                          0
MetaTrain/Average/TerminationRate                      0
MetaTrain/__unnamed_task__/AverageDiscountedReturn  -277.598
MetaTrain/__unnamed_task__/AverageReturn            -277.598
MetaTrain/__unnamed_task__/Iteration                   0
MetaTrain/__unnamed_task__/MaxReturn                -199.994
MetaTrain/__unnamed_task__/MinReturn                -355.202
MetaTrain/__unnamed_task__/NumEpisodes                 2
MetaTrain/__unnamed_task__/StdReturn                  77.6039
MetaTrain/__unnamed_task__/SuccessRate                 0
MetaTrain/__unnamed_task__/TerminationRate             0
TotalEnvSteps                                       6900
--------------------------------------------------  ---------
2025-01-08 12:01:34 | [CL_point_env] epoch #1 | Training...
2025-01-08 12:01:35 | [CL_point_env] epoch #1 | Training Encoder
Traceback (most recent call last):
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl-9916970f86b9202e9d7063b26b7a6a23cc989802/garage/examples/torch/multi_env_CL.py", line 199, in <module>
    CL_point_env()
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl-9916970f86b9202e9d7063b26b7a6a23cc989802/garage/experiment/experiment.py", line 369, in __call__
    result = self.function(ctxt, **kwargs)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl-9916970f86b9202e9d7063b26b7a6a23cc989802/garage/examples/torch/multi_env_CL.py", line 196, in CL_point_env
    trainer.train(n_epochs=num_epochs, batch_size=batch_size)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl-9916970f86b9202e9d7063b26b7a6a23cc989802/garage/trainer.py", line 396, in train
    average_return = self._algo.train(self)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl-9916970f86b9202e9d7063b26b7a6a23cc989802/garage/torch/algos/CLMeta.py", line 335, in train
    self._train_once()
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl-9916970f86b9202e9d7063b26b7a6a23cc989802/garage/torch/algos/CLMeta.py", line 372, in _train_once
    self._optimize_policy(indices)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl-9916970f86b9202e9d7063b26b7a6a23cc989802/garage/torch/algos/CLMeta.py", line 495, in _optimize_policy
    q2 = self._qf2(torch.cat([obs, new_actions], dim=1), task_z.detach())
KeyboardInterrupt
Traceback (most recent call last):
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl-9916970f86b9202e9d7063b26b7a6a23cc989802/garage/examples/torch/multi_env_CL.py", line 199, in <module>
    CL_point_env()
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl-9916970f86b9202e9d7063b26b7a6a23cc989802/garage/experiment/experiment.py", line 369, in __call__
    result = self.function(ctxt, **kwargs)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl-9916970f86b9202e9d7063b26b7a6a23cc989802/garage/examples/torch/multi_env_CL.py", line 196, in CL_point_env
    trainer.train(n_epochs=num_epochs, batch_size=batch_size)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl-9916970f86b9202e9d7063b26b7a6a23cc989802/garage/trainer.py", line 396, in train
    average_return = self._algo.train(self)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl-9916970f86b9202e9d7063b26b7a6a23cc989802/garage/torch/algos/CLMeta.py", line 335, in train
    self._train_once()
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl-9916970f86b9202e9d7063b26b7a6a23cc989802/garage/torch/algos/CLMeta.py", line 372, in _train_once
    self._optimize_policy(indices)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl-9916970f86b9202e9d7063b26b7a6a23cc989802/garage/torch/algos/CLMeta.py", line 495, in _optimize_policy
    q2 = self._qf2(torch.cat([obs, new_actions], dim=1), task_z.detach())
KeyboardInterrupt

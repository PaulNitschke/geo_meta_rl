2025-01-08 08:54:43 | [CL_point_env] Logging to /Users/paulnitschke/Desktop/projects/geo_meta_rl/data/local/experiment/CL_point_env_21


Failed to import TF-Keras. Please note that TF-Keras is not installed by default when you install TensorFlow Probability. This is so that JAX-only users do not have to install TensorFlow or TF-Keras. To use TensorFlow Probability with TensorFlow, please install the tf-keras or tf-keras-nightly package.
This can be be done through installing the tensorflow-probability[tf] extra.
/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/experiment/deterministic.py:36: UserWarning: Enabeling deterministic mode in PyTorch can have a performance impact when using GPU.
  warnings.warn(


2025-01-08 08:54:43 | [CL_point_env] Obtaining samples...
/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/distributions/distribution.py:53: UserWarning: <class 'garage.torch.distributions.tanh_normal.TanhNormal'> does not define `arg_constraints`. Please set `arg_constraints = {}` or initialize the distribution with `validate_args=False` to turn off validation.
  warnings.warn(
/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/_dtypes.py:1051: UserWarning: Observation array([0., 0., 2.]) is outside observation_space Box(-inf, inf, (3,), float32)
  warnings.warn(
2025-01-08 08:54:46 | [CL_point_env] epoch #0 | Pre-Training Encoder...
2025-01-08 08:54:46 | [CL_point_env] epoch #0 | Pairwise Similarity Matrix: tensor([[1.0000, 0.9984],
        [0.9984, 1.0000]], grad_fn=<MmBackward0>)
2025-01-08 08:54:58 | [CL_point_env] epoch #0 | Pairwise Similarity Matrix: tensor([[ 1.0000, -0.9989],
        [-0.9989,  1.0000]], grad_fn=<MmBackward0>)
2025-01-08 08:54:58 | [CL_point_env] epoch #0 | Pre-Training Encoder Done...
2025-01-08 08:54:58 | [CL_point_env] epoch #0 | Pairwise Similarity Matrix: tensor([[ 1.0000, -0.9992],
        [-0.9992,  1.0000]], grad_fn=<MmBackward0>)
2025-01-08 08:54:58 | [CL_point_env] epoch #0 | Mean Task Embeddings (n_tasks x embedding_dim): tensor([[-0.2129, -0.6398, -0.0234, -0.2363,  0.6992],
        [ 0.2439,  0.6506,  0.0098,  0.2258, -0.6826]],
       grad_fn=<PermuteBackward0>)

2025-01-08 08:54:58 | [CL_point_env] epoch #0 | Training...
2025-01-08 08:54:59 | [CL_point_env] epoch #0 | Pairwise Similarity Matrix: tensor([[ 1.0000, -0.9995],
        [-0.9995,  1.0000]], grad_fn=<MmBackward0>)
2025-01-08 08:54:59 | [CL_point_env] epoch #0 | Mean Task Embeddings (n_tasks x embedding_dim): tensor([[-0.2176, -0.6409, -0.0176, -0.2324,  0.6982],
        [ 0.2298,  0.6439,  0.0367,  0.2496, -0.6843]],
       grad_fn=<PermuteBackward0>)

2025-01-08 08:54:59 | [CL_point_env] epoch #0 | Training Encoder

-----------------------------  -----------
Embedding/MeanContrastiveLoss    0.0579126
PolicyTraining/MeanQ1Vals      -22.432
PolicyTraining/MeanQ2Vals      -22.432
PolicyTraining/MeanVVals        -4.44753
PolicyTraining/PolicyLoss       21.2361
PolicyTraining/QfLoss           13.0887
PolicyTraining/VfLoss          294.253
-----------------------------  -----------
-----------------------------  -----------
Embedding/MeanContrastiveLoss    0.0579126
PolicyTraining/MeanQ1Vals      -22.432
PolicyTraining/MeanQ2Vals      -22.432
PolicyTraining/MeanVVals        -4.44753
PolicyTraining/PolicyLoss       21.2361
PolicyTraining/QfLoss           13.0887
PolicyTraining/VfLoss          294.253
-----------------------------  -----------
2025-01-08 08:55:19 | [CL_point_env] epoch #0 | Pairwise Similarity Matrix: tensor([[ 1.0000, -0.9996],
        [-0.9996,  1.0000]], grad_fn=<MmBackward0>)
2025-01-08 08:55:19 | [CL_point_env] epoch #0 | Mean Task Embeddings (n_tasks x embedding_dim): tensor([[-0.2265, -0.6436, -0.0178, -0.2303,  0.6936],
        [ 0.2053,  0.6374,  0.0311,  0.2396, -0.7022]],
       grad_fn=<PermuteBackward0>)
-----------------------------  -----------
Embedding/MeanContrastiveLoss    0.0579126
PolicyTraining/MeanQ1Vals      -22.432
PolicyTraining/MeanQ2Vals      -22.432
PolicyTraining/MeanVVals        -4.44753
PolicyTraining/PolicyLoss       21.2361
PolicyTraining/QfLoss           13.0887
PolicyTraining/VfLoss          294.253
-----------------------------  -----------
2025-01-08 08:55:19 | [CL_point_env] epoch #0 | Training Encoder

-----------------------------  -----------
Embedding/MeanContrastiveLoss    0.0578983
PolicyTraining/MeanQ1Vals      -22.4682
PolicyTraining/MeanQ2Vals      -22.4682
PolicyTraining/MeanVVals       -20.0202
PolicyTraining/PolicyLoss       21.225
PolicyTraining/QfLoss            5.27026
PolicyTraining/VfLoss            2.12084
-----------------------------  -----------
-----------------------------  -----------
Embedding/MeanContrastiveLoss    0.0578983
PolicyTraining/MeanQ1Vals      -22.4682
PolicyTraining/MeanQ2Vals      -22.4682
PolicyTraining/MeanVVals       -20.0202
PolicyTraining/PolicyLoss       21.225
PolicyTraining/QfLoss            5.27026
PolicyTraining/VfLoss            2.12084
-----------------------------  -----------
2025-01-08 08:55:39 | [CL_point_env] epoch #0 | Pairwise Similarity Matrix: tensor([[ 1.0000, -0.9997],
        [-0.9997,  1.0000]], grad_fn=<MmBackward0>)
2025-01-08 08:55:39 | [CL_point_env] epoch #0 | Mean Task Embeddings (n_tasks x embedding_dim): tensor([[-0.2275, -0.6439, -0.0222, -0.2335,  0.6919],
        [ 0.2084,  0.6405,  0.0156,  0.2241, -0.7042]],
       grad_fn=<PermuteBackward0>)
-----------------------------  -----------
Embedding/MeanContrastiveLoss    0.0578983
PolicyTraining/MeanQ1Vals      -22.4682
PolicyTraining/MeanQ2Vals      -22.4682
PolicyTraining/MeanVVals       -20.0202
PolicyTraining/PolicyLoss       21.225
PolicyTraining/QfLoss            5.27026
PolicyTraining/VfLoss            2.12084
-----------------------------  -----------
2025-01-08 08:55:39 | [CL_point_env] epoch #0 | Training Encoder
Traceback (most recent call last):
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/examples/torch/multi_env_CL.py", line 197, in <module>
    CL_point_env()
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/experiment/experiment.py", line 369, in __call__
    result = self.function(ctxt, **kwargs)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/examples/torch/multi_env_CL.py", line 194, in CL_point_env
    trainer.train(n_epochs=num_epochs, batch_size=batch_size)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/trainer.py", line 396, in train
    average_return = self._algo.train(self)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/torch/algos/CLMeta.py", line 334, in train
    self._train_once()
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/torch/algos/CLMeta.py", line 372, in _train_once
    self._optimize_policy(indices)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/torch/algos/CLMeta.py", line 484, in _optimize_policy
    q2 = self._qf2(torch.cat([obs, new_actions], dim=1), task_z.detach())
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/torch/q_functions/continuous_mlp_q_function.py", line 43, in forward
    return super().forward(torch.cat([observations, actions], 1))
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/torch/modules/mlp_module.py", line 73, in forward
    return super().forward(input_value)[0]
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/torch/modules/multi_headed_mlp_module.py", line 149, in forward
    x = layer(x)
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/nn/modules/container.py", line 217, in forward
    input = module(input)
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/nn/modules/linear.py", line 116, in forward
    return F.linear(input, self.weight, self.bias)
KeyboardInterrupt
Traceback (most recent call last):
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/examples/torch/multi_env_CL.py", line 197, in <module>
    CL_point_env()
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/experiment/experiment.py", line 369, in __call__
    result = self.function(ctxt, **kwargs)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/examples/torch/multi_env_CL.py", line 194, in CL_point_env
    trainer.train(n_epochs=num_epochs, batch_size=batch_size)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/trainer.py", line 396, in train
    average_return = self._algo.train(self)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/torch/algos/CLMeta.py", line 334, in train
    self._train_once()
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/torch/algos/CLMeta.py", line 372, in _train_once
    self._optimize_policy(indices)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/torch/algos/CLMeta.py", line 484, in _optimize_policy
    q2 = self._qf2(torch.cat([obs, new_actions], dim=1), task_z.detach())
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/torch/q_functions/continuous_mlp_q_function.py", line 43, in forward
    return super().forward(torch.cat([observations, actions], 1))
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/torch/modules/mlp_module.py", line 73, in forward
    return super().forward(input_value)[0]
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/torch/modules/multi_headed_mlp_module.py", line 149, in forward
    x = layer(x)
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/nn/modules/container.py", line 217, in forward
    input = module(input)
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/nn/modules/linear.py", line 116, in forward
    return F.linear(input, self.weight, self.bias)
KeyboardInterrupt

2025-01-08 15:00:29 | [CL_point_env] Logging to /Users/paulnitschke/Desktop/projects/geo_meta_rl/data/local/experiment/CL_point_env_16


Failed to import TF-Keras. Please note that TF-Keras is not installed by default when you install TensorFlow Probability. This is so that JAX-only users do not have to install TensorFlow or TF-Keras. To use TensorFlow Probability with TensorFlow, please install the tf-keras or tf-keras-nightly package.
This can be be done through installing the tensorflow-probability[tf] extra.
/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/experiment/deterministic.py:36: UserWarning: Enabeling deterministic mode in PyTorch can have a performance impact when using GPU.
  warnings.warn(


2025-01-08 15:00:29 | [CL_point_env] Obtaining samples...
/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/distributions/distribution.py:53: UserWarning: <class 'garage.torch.distributions.tanh_normal.TanhNormal'> does not define `arg_constraints`. Please set `arg_constraints = {}` or initialize the distribution with `validate_args=False` to turn off validation.
  warnings.warn(
/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/_dtypes.py:1051: UserWarning: Observation array([0., 0., 2.]) is outside observation_space Box(-inf, inf, (3,), float32)
  warnings.warn(
2025-01-08 15:00:33 | [CL_point_env] epoch #0 | Pre-Training Encoder...
2025-01-08 15:01:12 | [CL_point_env] epoch #0 | Pre-Training Encoder Done...
2025-01-08 15:01:13 | [CL_point_env] epoch #0 | Training...
2025-01-08 15:01:15 | [CL_point_env] epoch #0 | Training Encoder

2025-01-08 15:01:52 | [CL_point_env] epoch #0 | Training Encoder

2025-01-08 15:02:27 | [CL_point_env] epoch #0 | Training Encoder

2025-01-08 15:03:04 | [CL_point_env] epoch #0 | Training Encoder

2025-01-08 15:03:40 | [CL_point_env] epoch #0 | Training Encoder

2025-01-08 15:04:16 | [CL_point_env] epoch #0 | Training Encoder

2025-01-08 15:04:52 | [CL_point_env] epoch #0 | Training Encoder

2025-01-08 15:05:28 | [CL_point_env] epoch #0 | Training Encoder

2025-01-08 15:06:04 | [CL_point_env] epoch #0 | Training Encoder

2025-01-08 15:06:40 | [CL_point_env] epoch #0 | Training Encoder

2025-01-08 15:07:10 | [CL_point_env] epoch #0 | Training Encoder

2025-01-08 15:07:39 | [CL_point_env] epoch #0 | Training Encoder

2025-01-08 15:08:09 | [CL_point_env] epoch #0 | Training Encoder

2025-01-08 15:08:38 | [CL_point_env] epoch #0 | Training Encoder

2025-01-08 15:09:08 | [CL_point_env] epoch #0 | Training Encoder

2025-01-08 15:09:36 | [CL_point_env] epoch #0 | Evaluating...
2025-01-08 15:09:36 | [CL_point_env] epoch #0 | Sampling for adapation and meta-testing...


Failed to import TF-Keras. Please note that TF-Keras is not installed by default when you install TensorFlow Probability. This is so that JAX-only users do not have to install TensorFlow or TF-Keras. To use TensorFlow Probability with TensorFlow, please install the tf-keras or tf-keras-nightly package.
This can be be done through installing the tensorflow-probability[tf] extra.
/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/experiment/deterministic.py:36: UserWarning: Enabeling deterministic mode in PyTorch can have a performance impact when using GPU.
  warnings.warn(


2025-01-08 15:09:37 | [CL_point_env] epoch #0 | Finished meta-testing...
embedding:  [[ 0.22149636  0.40747315  0.33808878  0.64399093 -0.5058425 ]]
embedding:  [[-0.21888785 -0.6707797   0.01958706 -0.14643572  0.69304806]]
2025-01-08 15:09:38 | [CL_point_env] epoch #0 | Sampling for adapation and meta-testing...


Failed to import TF-Keras. Please note that TF-Keras is not installed by default when you install TensorFlow Probability. This is so that JAX-only users do not have to install TensorFlow or TF-Keras. To use TensorFlow Probability with TensorFlow, please install the tf-keras or tf-keras-nightly package.
This can be be done through installing the tensorflow-probability[tf] extra.


2025-01-08 15:09:41 | [CL_point_env] epoch #0 | Finished meta-testing...
embedding:  [[ 0.22149636  0.40747315  0.33808878  0.64399093 -0.5058425 ]]
embedding:  [[-0.10334042 -0.56379956  0.41710928  0.43101963  0.5582945 ]]
embedding:  [[-0.22137263 -0.66156864  0.02414746 -0.1655705   0.69665223]]
embedding:  [[-0.22272484 -0.65943396  0.00962251 -0.17701916  0.6957817 ]]
embedding:  [[-0.11931477 -0.5505172   0.40977988  0.45668605  0.5533653 ]]
2025-01-08 15:09:42 | [CL_point_env] epoch #0 | Saving snapshot...
2025-01-08 15:09:42 | [CL_point_env] epoch #0 | Saved
2025-01-08 15:09:42 | [CL_point_env] epoch #0 | Time 552.78 s
2025-01-08 15:09:42 | [CL_point_env] epoch #0 | EpochTime 552.78 s
--------------------------------------------------  ----------
MetaTest/Average/AverageDiscountedReturn            -431.668
MetaTest/Average/AverageReturn                      -431.668
MetaTest/Average/Iteration                             0
MetaTest/Average/MaxReturn                          -247.946
MetaTest/Average/MinReturn                          -563.339
MetaTest/Average/NumEpisodes                           5
MetaTest/Average/StdReturn                           133.188
MetaTest/Average/SuccessRate                           0
MetaTest/Average/TerminationRate                       0
MetaTest/__unnamed_task__/AverageDiscountedReturn   -431.668
MetaTest/__unnamed_task__/AverageReturn             -431.668
MetaTest/__unnamed_task__/Iteration                    0
MetaTest/__unnamed_task__/MaxReturn                 -247.946
MetaTest/__unnamed_task__/MinReturn                 -563.339
MetaTest/__unnamed_task__/NumEpisodes                  5
MetaTest/__unnamed_task__/StdReturn                  133.188
MetaTest/__unnamed_task__/SuccessRate                  0
MetaTest/__unnamed_task__/TerminationRate              0
MetaTrain/Average/AverageDiscountedReturn           -557.496
MetaTrain/Average/AverageReturn                     -557.496
MetaTrain/Average/Iteration                            0
MetaTrain/Average/MaxReturn                         -551.652
MetaTrain/Average/MinReturn                         -563.339
MetaTrain/Average/NumEpisodes                          2
MetaTrain/Average/StdReturn                            5.84347
MetaTrain/Average/SuccessRate                          0
MetaTrain/Average/TerminationRate                      0
MetaTrain/__unnamed_task__/AverageDiscountedReturn  -557.496
MetaTrain/__unnamed_task__/AverageReturn            -557.496
MetaTrain/__unnamed_task__/Iteration                   0
MetaTrain/__unnamed_task__/MaxReturn                -551.652
MetaTrain/__unnamed_task__/MinReturn                -563.339
MetaTrain/__unnamed_task__/NumEpisodes                 2
MetaTrain/__unnamed_task__/StdReturn                   5.84347
MetaTrain/__unnamed_task__/SuccessRate                 0
MetaTrain/__unnamed_task__/TerminationRate             0
TotalEnvSteps                                       6900
--------------------------------------------------  ----------
2025-01-08 15:09:44 | [CL_point_env] epoch #1 | Pre-Training Encoder...
2025-01-08 15:09:44 | [CL_point_env] epoch #1 | Pre-Training Encoder Done...
2025-01-08 15:09:45 | [CL_point_env] epoch #1 | Training...
2025-01-08 15:09:48 | [CL_point_env] epoch #1 | Training Encoder

2025-01-08 15:10:17 | [CL_point_env] epoch #1 | Training Encoder

2025-01-08 15:10:53 | [CL_point_env] epoch #1 | Training Encoder

2025-01-08 15:11:23 | [CL_point_env] epoch #1 | Training Encoder

2025-01-08 15:11:54 | [CL_point_env] epoch #1 | Training Encoder

2025-01-08 15:12:24 | [CL_point_env] epoch #1 | Training Encoder

2025-01-08 15:12:54 | [CL_point_env] epoch #1 | Training Encoder

2025-01-08 15:13:24 | [CL_point_env] epoch #1 | Training Encoder

2025-01-08 15:13:54 | [CL_point_env] epoch #1 | Training Encoder

2025-01-08 15:14:24 | [CL_point_env] epoch #1 | Training Encoder

2025-01-08 15:14:53 | [CL_point_env] epoch #1 | Training Encoder

2025-01-08 15:15:23 | [CL_point_env] epoch #1 | Training Encoder

2025-01-08 15:15:52 | [CL_point_env] epoch #1 | Training Encoder

2025-01-08 15:16:22 | [CL_point_env] epoch #1 | Training Encoder
Traceback (most recent call last):
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/examples/torch/multi_env_CL.py", line 205, in <module>
    CL_point_env()
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/experiment/experiment.py", line 369, in __call__
    result = self.function(ctxt, **kwargs)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/examples/torch/multi_env_CL.py", line 202, in CL_point_env
    trainer.train(n_epochs=num_epochs, batch_size=batch_size)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/trainer.py", line 396, in train
    average_return = self._algo.train(self)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/torch/algos/CLMeta.py", line 335, in train
    self._train_once()
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/torch/algos/CLMeta.py", line 372, in _train_once
    self._optimize_policy(indices)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/torch/algos/CLMeta.py", line 520, in _optimize_policy
    policy_loss.backward()
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/_tensor.py", line 525, in backward
    torch.autograd.backward(
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/autograd/__init__.py", line 267, in backward
    _engine_run_backward(
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/autograd/graph.py", line 744, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt
Traceback (most recent call last):
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/examples/torch/multi_env_CL.py", line 205, in <module>
    CL_point_env()
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/experiment/experiment.py", line 369, in __call__
    result = self.function(ctxt, **kwargs)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/examples/torch/multi_env_CL.py", line 202, in CL_point_env
    trainer.train(n_epochs=num_epochs, batch_size=batch_size)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/trainer.py", line 396, in train
    average_return = self._algo.train(self)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/torch/algos/CLMeta.py", line 335, in train
    self._train_once()
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/torch/algos/CLMeta.py", line 372, in _train_once
    self._optimize_policy(indices)
  File "/Users/paulnitschke/Desktop/projects/geo_meta_rl/garage/torch/algos/CLMeta.py", line 520, in _optimize_policy
    policy_loss.backward()
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/_tensor.py", line 525, in backward
    torch.autograd.backward(
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/autograd/__init__.py", line 267, in backward
    _engine_run_backward(
  File "/Users/paulnitschke/miniconda3/envs/env_geo_meta_rl/lib/python3.9/site-packages/torch/autograd/graph.py", line 744, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt

import torch

def plot_learned_generator(generator, 
                           ax,
                           quiver_scale: float=1,
                           n_mesh: int=10,
                           title: str = None):
    
    """Plots the vector field generated by a 2D generator into the provided axis.

    Args:
    - generator: torch.tensor of shape (kernel_dim, feature_dim, feature_dim) where feature_dim=2
    - ax: matplotlib.axes.Axes object to draw the quiver plot into
    - quiver_scale: float, scale of the quivers, larger values make quivers smallers
    - title: Optional title for the plot
    """
    # Create a mesh grid over the 2D plane
    x_min, x_max = - 0.5, + 0.5
    y_min, y_max = - 0.5, + 0.5
    xx, yy = torch.meshgrid(torch.linspace(x_min, x_max, n_mesh),
                            torch.linspace(y_min, y_max, n_mesh),
                            indexing='ij')
    mesh_points = torch.stack([xx.flatten(), yy.flatten()], dim=1)

    # Compute the kernel for the mesh points
    mesh_kernel = torch.einsum('dnm, bm->bdn', generator, mesh_points).squeeze(1)

    # Reshape for plotting
    mesh_kernel_x = mesh_kernel[:, 0].reshape(xx.shape)
    mesh_kernel_y = mesh_kernel[:, 1].reshape(yy.shape)

    # Plot the vector field
    ax.quiver(xx.numpy(), yy.numpy(),
              mesh_kernel_x.detach().numpy(),
              mesh_kernel_y.detach().numpy(),
              angles='xy', scale_units='xy', scale=quiver_scale,
              color="blue")

    ax.set_aspect('equal')
    ax.grid(True)
    if title:
        ax.set_title(title)
